package vine.application;

import static org.lwjgl.glfw.GLFW.glfwGetMonitorName;
import static org.lwjgl.glfw.GLFW.glfwGetMonitors;
import static org.lwjgl.glfw.GLFW.glfwGetPrimaryMonitor;
import static org.lwjgl.glfw.GLFW.glfwGetVideoMode;
import static org.lwjgl.glfw.GLFW.GLFW_DISCONNECTED;
import static org.lwjgl.glfw.GLFW.glfwSetMonitorCallback;

import org.lwjgl.PointerBuffer;
import org.lwjgl.glfw.GLFWMonitorCallback;
import org.lwjgl.glfw.GLFWVidMode;

/**
 * @author Steffen
 *
 */
public class GLFWDisplay implements Display {
    // Get the resolution of the primary monitor
    private GLFWVidMode vidmode;
    private long currentMonitor = glfwGetPrimaryMonitor();
    private GLFWMonitorCallback monitorCallback = GLFWMonitorCallback.create((l, e) -> changeMonitor(l, e));

    /**
     * 
     */
    public GLFWDisplay() {
        this(glfwGetPrimaryMonitor());
    }

    /**
     * @param preferredMonitor
     */
    public GLFWDisplay(long preferredMonitor) {
        glfwSetMonitorCallback(monitorCallback);
        GLFWVidMode prefVidMode = glfwGetVideoMode(glfwGetPrimaryMonitor());
        if (prefVidMode != null) {
            currentMonitor = preferredMonitor;
            vidmode = prefVidMode;
        } else {
            currentMonitor = glfwGetPrimaryMonitor();
            vidmode = prefVidMode;

        }
    }

    private void changeMonitor(long l, int e) {
        if (l == currentMonitor && e == GLFW_DISCONNECTED) {
            vidmode = glfwGetVideoMode(glfwGetPrimaryMonitor());
        }
    }

    /* (non-Javadoc)
     * @see vine.application.Display#getMonitorNames()
     */
    @Override
    public String[] getMonitorNames() {
        PointerBuffer monitors = glfwGetMonitors();
        String[] monitorNames = new String[monitors.capacity()];
        for (int i = 0; i < monitors.capacity(); i++) {
            monitorNames[i] = glfwGetMonitorName(monitors.get(i));
        }
        return monitorNames;
    }

    /* (non-Javadoc)
     * @see vine.application.Display#width()
     */
    @Override
    public int getWidth() {
        return vidmode.width();
    }

    /* (non-Javadoc)
     * @see vine.application.Display#getRedBits()
     */
    @Override
    public int getRedBits() {
        return vidmode.redBits();
    }

    /* (non-Javadoc)
     * @see vine.application.Display#height()
     */
    @Override
    public int height() {
        return vidmode.height();
    }

    /* (non-Javadoc)
     * @see vine.application.Display#getRefreshRate()
     */
    @Override
    public int getRefreshRate() {
        return vidmode.refreshRate();
    }

    /* (non-Javadoc)
     * @see vine.application.Display#getBlueBits()
     */
    @Override
    public int getBlueBits() {
        return vidmode.blueBits();
    }

    /* (non-Javadoc)
     * @see vine.application.Display#getGreenBits()
     */
    @Override
    public int getGreenBits() {
        return vidmode.greenBits();
    }

    /* (non-Javadoc)
     * @see vine.application.Display#getMonitorName()
     */
    @Override
    public String getMonitorName() {
        return glfwGetMonitorName(glfwGetPrimaryMonitor());
    }

    /**
     * @return
     */
    public static long getPrimaryMonitor() {
        return glfwGetPrimaryMonitor();
    }
}
