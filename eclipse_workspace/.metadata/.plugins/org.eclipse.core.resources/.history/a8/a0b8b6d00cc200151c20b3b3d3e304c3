package vine.game.screen;

import vine.math.Matrix4f;
import vine.window.Window;

/**
 * @author Steffen
 *
 */
public class GameScreen implements Screen {

    private final Window window;
    private final Viewport viewport;
    private int height;
    private int width;
    private float aspect;
    private final Matrix4f projection;

    /**
     * @param window
     * @param aspectRatio
     * @param width
     */
    public GameScreen(Window window, float aspectRatio, int width) {
        super();
        this.aspect = aspectRatio;
        this.window = window;
        this.viewport = new Viewport();
        this.height = (int) (width * aspectRatio);
        this.width = width;
        sizeViewport();
        this.projection = Matrix4f.orthographic(-width / 2.f, width / 2.f, -this.height / 2.f, this.height / 2.f, -1.0f,
                1.0f);
    }

    private void sizeViewport() {
        float widthInAspectRatio = window.getHeight() / (aspect);
        float totalOffset = window.getWidth() - widthInAspectRatio;
        viewport.setLeftOffset((int) (totalOffset / 2));
        viewport.setRightOffset((int) (totalOffset / 2));
        viewport.setBottomOffset(0);
        viewport.setTopOffset(0);
    }

    @Override
    public Viewport getViewport() {
        sizeViewport();
        return viewport;
    }

    @Override
    public int getWidth() {
        return width;
    }

    @Override
    public int getHeight() {
        return height;
    }

    @Override
    public float worldToScreenCoord(float x) {
        return x * getUnitsPerPixel();
    }

    @Override
    public float getUnitsPerPixel() {
        return ((float) window.getWidth() - viewport.getLeftOffset() * 2) / width;
    }

    @Override
    public float getAspect() {
        return aspect;
    }

    @Override
    public Matrix4f getOrthographicProjection() {
        return projection;
    }

    @Override
    public void setAspectRatio(float ratio) {
        this.aspect = ratio;
        this.height = (int) (width * ratio);
        sizeViewport();
    }

    @Override
    public void setWidth(int width) {
        this.width = width;
        this.height = (int) (width * aspect);
        sizeViewport();
    }

}
