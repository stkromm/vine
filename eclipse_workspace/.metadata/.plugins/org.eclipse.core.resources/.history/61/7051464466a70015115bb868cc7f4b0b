package com.vine.math;

import com.vine.util.BufferUtils;

import java.nio.FloatBuffer;

public class Transformation {
    private Vector3f translation;
    private Matrix3f rotation;
    private Vector3f projection;

    /**
     * Creates an orthographic transformation matrix.
     */
    public void orthographic(float left, float right, float bottom, float top, float near, float far) {
        rotation = rotation.getIdentity();
        rotation.setA11(2.0f / (right - left));
        rotation.setA22(2.0f / (right - left));
        rotation.setA33(2.0f / (near - far));
        //
        projection = new Vector3f(-(left + right) / (left - right), -(bottom + top) / (bottom - top),
                -(far + near) / (far - near));
    }

    /**
     * Sets the translation of the transformation.
     */
    public void translate(Vector3f vector) {
        a14 = vector.getX();
        a24 = vector.getY();
        a34 = vector.getZ();
    }

    /**
     * Sets the angle of the rotation of the transformation.
     */
    public void setRotation(float angle) {
        float rotation = (float) Math.toRadians(angle);
        float cos = (float) Math.cos(rotation);
        float sin = (float) Math.sin(rotation);

        a11 = cos;
        a12 = sin;

        a21 = -sin;
        a22 = cos;
    }

    /**
     * Multiplies the given matrix from the right and returns the result.
     */
    public Transformation multiply(Transformation matrix) {
        Transformation result = new Transformation();
        for (int y = 0; y < 4; y++) {
            for (int x = 0; x < 4; x++) {
                float sum = 0.0f;
                for (int e = 0; e < 4; e++) {
                    sum += this.elements[x + e * 4] * matrix.elements[e + y * 4];
                }
                result.elements[x + y * 4] = sum;
            }
        }
        return result;
    }

    public FloatBuffer toFloatBuffer() {
        return BufferUtils.createFloatBuffer(
                new float[] { rotation.getA11(), rotation.getA12(), rotation.getA13(), translation.getX() });
    }

}
