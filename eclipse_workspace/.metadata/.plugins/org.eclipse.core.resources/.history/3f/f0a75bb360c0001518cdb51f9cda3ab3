package vine.entity;

import org.lwjgl.glfw.GLFW;

import vine.application.Application;
import vine.application.StatMonitor;
import vine.event.KeyEvent;

public class PlayerPawn extends GameEntity {

    @Override
    public strictfp void update(float delta) {
        this.position.add(velocity.getX() * delta, velocity.getY() * delta, 0);
    }

    @Override
    public boolean onKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getKey() == GLFW.GLFW_KEY_F) {
            Application.settings.getSetting("Window-Mode").setSelectedOption("Fullscreen");
        }
        if (keyEvent.getAction() == 0) {
            if (keyEvent.getKey() == GLFW.GLFW_KEY_A) {
                velocity.setX(velocity.getX() < 64 ? velocity.getX() + 64 : 64);
            }
            if (keyEvent.getKey() == GLFW.GLFW_KEY_D) {
                velocity.setX(velocity.getX() > -64 ? velocity.getX() - 64 : -64);
            }
            if (keyEvent.getKey() == GLFW.GLFW_KEY_S) {
                velocity.setY(velocity.getY() < 64 ? velocity.getY() + 64 : 64);
            }
            if (keyEvent.getKey() == GLFW.GLFW_KEY_W) {
                velocity.setY(velocity.getY() > -64 ? velocity.getY() - 64 : -64);
            }
        } else if (keyEvent.getAction() == 1) {
            if (keyEvent.getKey() == GLFW.GLFW_KEY_A) {
                velocity.setX(velocity.getX() > 64 ? 64 : velocity.getX() - 64);
            }
            if (keyEvent.getKey() == GLFW.GLFW_KEY_D) {
                velocity.setX(velocity.getX() < -64 ? -64 : velocity.getX() + 64);
            }
            if (keyEvent.getKey() == GLFW.GLFW_KEY_S) {
                velocity.setY(velocity.getY() < -64 ? -64 : velocity.getY() - 64);
            }
            if (keyEvent.getKey() == GLFW.GLFW_KEY_W) {
                velocity.setY(velocity.getX() > 64 ? 64 : velocity.getY() + 64);
            }
        }
        return true;
    }

    @Override
    public void construct() {
        this.position.add(0, 0, 0.5f);
    }
}
