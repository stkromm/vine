package vine.window;

import vine.application.Application;

public interface Window {

    /**
     * Callback, used to react to a close request on the window.
     * 
     * @author Steffen
     *
     */
    @FunctionalInterface
    interface CloseCallback {
        /**
         * Called on close request.
         */
        public void onCloseRequest();
    }

    /**
     * Callback, used to react to a change of the framebuffer size.
     * 
     * @author Steffen
     *
     */
    @FunctionalInterface
    interface FramebufferSizeCallback {
        /**
         * @param width
         *            The new framebuffer width.
         * @param height
         *            The new framebuffer height.
         */
        public void onFramebufferSizeChange(int width, int height);
    }

    /**
     * Callback, used to react to window position change.
     * 
     * @author Steffen
     *
     */
    @FunctionalInterface
    interface PositionCallback {
        /**
         * @param x
         *            The new x position of the window on the display
         * @param y
         *            The new y position of the window on the display
         */
        public void onPositionChange(int x, int y);
    }

    /**
     * Callback, used to react to a window size change.
     * 
     * @author Steffen
     *
     */
    @FunctionalInterface
    interface SizeCallback {
        /**
         * @param width
         *            The new width the window changed to.
         * @param height
         *            The new height the window changed to.
         */
        public void onSizeChange(int width, int height);
    }

    /**
     * @return The current width of the window.
     */
    int getWidth();

    /**
     * @return The current height of the window.
     */
    int getHeight();

    /**
     * @return The current x position of the window on the display.
     */
    int getPosX();

    /**
     * @return The current y position of the window on the display.
     */
    int getPosY();

    /**
     * @param width
     *            The new width the window changed to.
     * @param height
     *            The new height the window changed to.
     */
    void setWindowSize(int width, int height);

    /**
     * @param x
     *            The new x position of the window on the display
     * @param y
     *            The new y position of the window on the display
     */
    void setWindowPosition(int x, int y);

    /**
     * Releases the current SizeCallback and sets the given.
     * 
     * @param callback
     *            The new SizeCallback
     */
    void setSizeCallback(SizeCallback callback);

    /**
     * @param callback
     */
    void setPositionCallback(PositionCallback callback);

    /**
     * @param callback
     */
    void setFramebufferSizeCallback(FramebufferSizeCallback callback);

    /**
     * @param callback
     */
    void setCloseCallback(CloseCallback callback);

    /**
     * @param title
     */
    void setTitle(String title);

    /**
     * @param app
     * @throws WindowCreationException
     */
    void init(Application app) throws WindowCreationException;

    /**
     * @return
     */
    boolean isResizeable();

    /**
     * @return
     */
    boolean isVisible();

    /**
     * @return
     */
    boolean isFocused();

    /**
     * @return
     */
    boolean isDecorated();

    /**
     * @return True, if the window is currently iconified.
     */
    boolean isIconified();

    /**
     * @return True, if the user want to close the window.
     */
    boolean requestedWindowClosing();

    /**
     * 
     */
    void close();

    /**
     * 
     */
    void dispose();

    /**
     * 
     */
    void show();

    /**
     * @return
     */
    long getContext();

}