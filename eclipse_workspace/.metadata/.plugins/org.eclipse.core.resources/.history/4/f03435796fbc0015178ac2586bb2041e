package vine.core.game;

/**
 * @author stkromm
 *
 */
abstract class GameLoop {
    protected volatile boolean running = false;

    /**
     * Begin the game loop.
     */
    public void run() {
        running = true;
        startup();
        // convert the time to seconds
        double nextTime = (double) System.nanoTime() / 1000000000.0;
        while (running) {
            // convert the time to seconds
            final double currTime = (double) System.nanoTime(); // NOSONAR
            render();
            int sleepTime = (int) (1000.0 * (nextTime - currTime));
            sleep(sleepTime);
            if (shouldClose()) {
                running = false;
            }
        }
        shutdown();
    }

    protected static void sleep(int sleepTime) {
        if (sleepTime > 0) {
            // sleep until the next update
            try {
                Thread.sleep(sleepTime);
            } catch (InterruptedException e) {
                // do nothing
            }
        }
    }

    /**
     * Stops the game-loop.
     */
    public void close() {
        running = false;
    }

    /**
     * Called at startup of the game and initializes the game and starts the
     * game-loop.
     */
    abstract void startup();

    /**
     * Called, to shutdown the game.
     */
    abstract void shutdown();

    /**
     * Updates the game logic.
     */
    abstract void update(float delta);

    /**
     * Called every frame. Draws the game.
     */
    abstract void render();

    /**
     * @return Returns true, if the user wants to close the game.
     */
    abstract boolean shouldClose();

}
