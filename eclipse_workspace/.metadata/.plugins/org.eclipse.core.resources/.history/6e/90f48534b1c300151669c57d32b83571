package vine.event;

import java.util.ArrayDeque;
import java.util.Deque;

import vine.event.Event.EventType;
import vine.gameplay.scene.Layer;

/**
 * @author Steffen
 *
 */
public class EventDispatcher {
    /**
     * Stores all event layers of the game.
     */
    private static Deque<Layer> listeners = new ArrayDeque<>();

    /**
     * Used to provide functionality that will be executed on events.
     * 
     * @author Steffen
     *
     */
    @FunctionalInterface
    public interface EventHandler {
        /**
         * @param event
         *            The event, the handler should process
         * @return True, if the event is consumed by the handler and will not be
         *         further propagated to other handlers.
         */
        public boolean onEvent(Event event);
    }

    /**
     * @param layer
     */
    public static void registerListener(Layer layer) {
        listeners.addLast(layer);
    }

    /**
     * @param event
     */
    public static void dispatch(Event event) {
        listeners.stream().filter(e -> e.onEvent(event)).findFirst();
    }
}
