package vine.application;

import java.util.logging.Level;
import java.util.logging.Logger;

import vine.graphics.Graphics;
import vine.input.Input;
import vine.window.Window;
import vine.window.WindowCreationException;

/**
 * @author Steffen
 *
 */
public class Application {
    protected Window window;
    protected static Display display;
    protected Graphics graphics;
    protected Input input;

    public Display getDisplay() {
        return display;
    }

    /**
     * @param args
     *            Contains the settings of the game. Contains the startup-level
     *            path, asset path variables, game title, config-file paths,
     *            window and graphic settings.
     */
    public static void main(String[] args) {
        Application app = new Application();
        display = PlatformDependencyResolver.getDisplay();
        app.run();
    }

    /**
     * Begin the game loop.
     */
    public void run() {
        window = PlatformDependencyResolver.getPlatformWindow();
        input = PlatformDependencyResolver.getInput();
        graphics = PlatformDependencyResolver.getGraphics();
        try {
            window.init(this);
        } catch (WindowCreationException e) {
            Logger.getGlobal().log(Level.SEVERE, "Failed to initialize window", e);
        }
        GameRunner runner = new GameRunner(this, window.getContext());
        runner.run();
        window.close();
    }

    public static int getProcessorCount() {
        return Runtime.getRuntime().availableProcessors();
    }
}