package vine.components;

import org.lwjgl.glfw.GLFW;

import vine.event.KeyEvent;
import vine.input.InputMapper;

/**
 * @author Steffen
 *
 */
public class Sprite extends Component { // NOSONAR
    private volatile int speed = 64;
    private volatile float posX;
    private volatile float posY;
    int tileWidth = 64;
    int tileHeight = 64;
    float z = 0.2f;
    /**
     * @return The vertices of this sprite in screen coordinates
     */
    public float[] getVertices = new float[] { 0, 0, 0, 0, tileHeight, 0, tileWidth, tileHeight, 0, tileWidth, 0, 0, };

    @Override
    public strictfp void update(float delta) {
        float d = Math.abs(delta);
        if (InputMapper.isKeyPressed(GLFW.GLFW_KEY_A)) {
            posX -= speed * d;
        }
        if (InputMapper.isKeyPressed(GLFW.GLFW_KEY_D)) {
            posX += speed * d;
        }
        if (InputMapper.isKeyPressed(GLFW.GLFW_KEY_S)) {
            posY -= speed * d;
        }
        if (InputMapper.isKeyPressed(GLFW.GLFW_KEY_W)) {
            posY += speed * d;
        }
    }

    @Override
    public boolean onKeyEvent(KeyEvent keyEvent) {
        if (keyEvent.getKey() == GLFW.GLFW_KEY_SPACE && keyEvent.getAction() == 0) {
            posX = (int) Math.round(Math.random() * 4);
            posY = (int) Math.round(Math.random() * 4);
        }
        return false;
    }

    @Override
    public void construct() {
        super.construct();
    }
}
