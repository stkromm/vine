package vine.reflection;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

public class VineMethodUtil {

    private Method method;

    public VineMethodUtil(Method method) {
        this.method = method;
    }

    public static final void invokeMethodOn(Method method, Object object, Object... params) {
        try {
            method.invoke(object, params);
        } catch (IllegalAccessException e) {
            Logger.getGlobal().log(Level.SEVERE, "The construct method you've implemented in the class "
                    + object.getClass().toString() + " is not public.", e);

        } catch (IllegalArgumentException e) {
            String par = Arrays.toString(params);
            Logger.getGlobal().log(Level.SEVERE,
                    "The supplied arguments " + par + " don't match the defined argument list of the given class "
                            + object.getClass().toString()
                            + " construct method.\n Be sure to supply the right number of arguments in the order they are declared in the construct method.",
                    e);

        } catch (InvocationTargetException e) {
            Logger.getGlobal().log(Level.SEVERE,
                    "Class has not construct method. Have you passed a GameObject inherited class?", e);
        }
    }
}
