package com.vine.math;

public class Vector3f extends Vectorf implements VectorOperations<Vector3f> {
    public static final int SIZE = 3;
    private final float[] elements = new float[SIZE];

    public Vector3f(float f, float g, float h) {
        elements[0] = f;
        elements[1] = g;
        elements[2] = h;
    }

    @Override
    public boolean equalTo(Vector3f vector) {
        return Math.abs(vector.getElement(0) - elements[0] + vector.getElement(1) - elements[1] + vector.getElement(2)
                - elements[2]) < 3 * EPSILON;
    }

    public void add(float first, float second, float third) {
        elements[0] += first;
        elements[1] += second;
        elements[2] += third;
    }

    @Override
    public void add(Vector3f vector) {
        elements[0] += vector.getElement(0);
        elements[1] += vector.getElement(1);
        elements[2] += vector.getElement(2);
    }

    @Override
    public double dot(Vector3f vector) {
        return Math.sqrt(vector.getElement(0) * elements[0] + vector.getElement(1) * elements[1]
                + elements[2] * vector.getElement(2));
    }

    @Override
    public void scale(float factor) {
        // TODO Auto-generated method stub

    }

    @Override
    public double length() {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public double getAngle(Vector3f vector) {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    float getElement(int index) {
        // TODO Auto-generated method stub
        return 0;
    }

    public Vector3f cross(Vector3f vector2) {
        // TODO Auto-generated method stub
        return null;
    }

}
